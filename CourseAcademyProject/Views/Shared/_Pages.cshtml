@{
    HttpRequest? Request = ViewContext.HttpContext.Request;
}
<form method="get" class="form-inline m-3" id="pageform">
    <button name="options.CurrentPage" value="@(Model.CurrentPage - 1)"
            class="btn btn-primary @(!Model.HasPreviousPage ? "disabled" : "")" type="submit">
        Back
    </button>

    @for (int i = 1; i <= 3 && i <= Model.TotalPages; i++)
    {
        <button name="options.CurrentPage" value="@i" type="submit"
                class="btn btn-outline-primary @(Model.CurrentPage == i ? "active" : "")">
            @i
        </button>
    }
    @if (Model.CurrentPage > 3 && Model.TotalPages - Model.CurrentPage >= 3)
    {
        @:...
        <button class="btn btn-outline-primary active">@Model.CurrentPage</button>
    }
    @if (Model.TotalPages > 3)
    {
        @:...
        @for (int i = Math.Max(4, Model.TotalPages - 2); i <= Model.TotalPages; i++)
        {
            <button name="options.CurrentPage" value="@i" type="submit"
                    class="btn btn-outline-primary @(Model.CurrentPage == i ? "active" : "")">
                @i
            </button>
        }
    }
    <button name="options.CurrentPage" value="@(Model.CurrentPage + 1)" type="submit"
            class="btn btn-primary @(!Model.HasNextPage ? "disabled":"")">
        Go ahead
    </button>

    <select name="options.PageSize" class="my-form-control">
        @foreach (int val in new int[] { 10, 25, 50, 100 })
        {
            <option value="@val" selected="@(Model.PageSize == val)">@val</option>
        }
    </select>
    <input type="hidden" name="options.CurrentPage" value="1" />

    @if (Request.Query.ContainsKey("options.CategoryId"))
    {
        <input type="hidden" name="options.CategoryId" value="@Request.Query["options.CategoryId"]" />
    }
    @if (Request.Query.ContainsKey("options.DifficultyLevel"))
    {
        <input type="hidden" name="options.DifficultyLevel" value="@Request.Query["options.DifficultyLevel"]" />
    }
    @if (Request.Query.ContainsKey("options.Price"))
    {
        <input type="hidden" name="options.Price" value="@Request.Query["options.Price"]" />
    }
    @if (Request.Query.ContainsKey("options.DateOfPublication"))
    {
        <input type="hidden" name="options.DateOfPublication" value="@Request.Query["options.DateOfPublication"]" />
    }
    @if (Request.Query.ContainsKey("options.SearchTerm"))
    {
        <input type="hidden" name="options.SearchTerm" value="@Request.Query["options.SearchTerm"]" />
        <input type="hidden" name="options.SearchPropertyName" value="@Request.Query["options.SearchPropertyName"]" />
    }
    <button type="submit" class="btn btn-outline-primary">Resize page</button>
</form>
